(()=>{"use strict";async function n(n,e,t,o){const r=document.createElement("template");r.innerHTML=`\n    <style>\n        ${o}\n    </style>\n    ${t}\n    `;class i extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(r.content.cloneNode(!0))}connectedCallback(){e.bind(this)()}}customElements.define(n,i)}n("os-button",(function(){let n=this.getAttribute("primary")||null,e=this.getAttribute("size")||"medium";const t=this.getAttribute("backgroundColor")||null,o=n?"storybook-button--primary":"storybook-button--secondary",r=this.shadowRoot.querySelector("button");r.className=["storybook-button",`storybook-button--${e}`,o].join(" "),r.style.backgroundColor=t}),' <button type="button"> <slot></slot> </button>',".storybook-button {\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    border: 0;\r\n    border-radius: 3em;\r\n    font-weight: 700;\r\n    line-height: 1;\r\n    font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  }\r\n  .storybook-button--primary {\r\n    background-color: #1ea7fd;\r\n    color: white;\r\n  }\r\n  .storybook-button--secondary {\r\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n    background-color: transparent;\r\n    color: #333;\r\n  }\r\n  .storybook-button--small {\r\n    padding: 10px 16px;\r\n    font-size: 12px;\r\n  }\r\n  .storybook-button--medium {\r\n    padding: 11px 20px;\r\n    font-size: 14px;\r\n  }\r\n  .storybook-button--large {\r\n    padding: 12px 24px;\r\n    font-size: 16px;\r\n  }"),n("os-dial",(function(){document.addEventListener("DOMContentLoaded",(n=>{const e=this.shadowRoot.querySelector(".dial__input"),t=this.shadowRoot.querySelector(".dial__value");if(e.addEventListener("change",(n=>{const e=n.target.value;this.shadowRoot.querySelector(".dial__value").innerText=e})),t){const n=n=>{n.preventDefault();const o=n=>{const o=t.getBoundingClientRect(),r=(n.clientY||n.touches[0].clientY)-o.top,i=Math.max(0,Math.min(100,100-r/o.height*100));e.value=i,e.dispatchEvent(new Event("change"))},r=()=>{document.removeEventListener("mousemove",o),document.removeEventListener("mouseup",r),document.removeEventListener("touchmove",o),document.removeEventListener("touchend",r)};document.addEventListener("mousemove",o),document.addEventListener("mouseup",r),document.addEventListener("touchmove",o),document.addEventListener("touchend",r)};t.addEventListener("mousedown",n),t.addEventListener("touchstart",n)}}))}),'<div class="dial-container"> <div class="dial"> <div class="dial__value">0</div> <input type="range" class="dial__input" min="0" max="100" value="0"> </div> </div>',"\n/* Define variables? */\n:host {\n    --theme-color: #3498db; /* Define the theme color within the shadow DOM */\n}\n\n.dial input{\n    display: none;\n    /* Hiding the default range input  */\n}\n.dial-container{\n    position: relative;\n    min-height: 100px;\n    background: red;\n    width: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    user-select: none;\n    border-radius: 5px;\n}\n\n.dial {\n    position: absolute;\n    display: inline-flex;\n}\n\n.dial__value{\n    width: 50px;\n    cursor: grab;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--theme-color); /* Use the theme color */\n}\n\n.dial-container:active {\n    cursor: grabbing; /* Cursor when grabbing */\n}\n\n.dial__label{\n    align-self:flex-end;\n    text-align: center;\n}")})();