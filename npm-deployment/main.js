(()=>{"use strict";async function n(n,e,t,o){const i=document.createElement("template");i.innerHTML=`\n    <style>\n        ${o}\n    </style>\n    ${t}\n    `;class r extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(i.content.cloneNode(!0))}connectedCallback(){e.bind(this)()}}customElements.define(n,r)}n("os-button",(function(){let n=this.getAttribute("primary")||null,e=this.getAttribute("size")||"medium";const t=this.getAttribute("backgroundColor")||null,o=n?"storybook-button--primary":"storybook-button--secondary",i=this.shadowRoot.querySelector("button");i.className=["storybook-button",`storybook-button--${e}`,o].join(" "),i.style.backgroundColor=t}),' <button type="button"> <slot></slot> </button>',".storybook-button {\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    border: 0;\r\n    border-radius: 3em;\r\n    font-weight: 700;\r\n    line-height: 1;\r\n    font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  }\r\n  .storybook-button--primary {\r\n    background-color: #1ea7fd;\r\n    color: white;\r\n  }\r\n  .storybook-button--secondary {\r\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n    background-color: transparent;\r\n    color: #333;\r\n  }\r\n  .storybook-button--small {\r\n    padding: 10px 16px;\r\n    font-size: 12px;\r\n  }\r\n  .storybook-button--medium {\r\n    padding: 11px 20px;\r\n    font-size: 14px;\r\n  }\r\n  .storybook-button--large {\r\n    padding: 12px 24px;\r\n    font-size: 16px;\r\n  }"),n("os-dial",(function(){document.addEventListener("DOMContentLoaded",(n=>{const e=this.getAttribute("defaultDialValue")||5,t=this.data.onChange||null,o=this.hasAttribute("range")?this.getAttribute("range").split(","):[0,10],i=this.shadowRoot.querySelector(".dial__input"),r=this.shadowRoot.querySelector(".dial__value"),a=this.shadowRoot.querySelector(".dial__lens"),s=this.shadowRoot.querySelector(".dial-container");function l(n){return n<o[0]||n>o[1]?'<div style="opacity: 0; user-select:none">n/a</div>':`<div>${n}</div>`}function d(n){const e=+n.target.value;this.shadowRoot.querySelector(".dial__value").innerHTML=`${l(e+1)}<br><div class="userVote">${l(e)}</div><br>${l(e-1)}`,t&&t(n)}if(i.setAttribute("min",o[0]),i.setAttribute("max",o[1]),i.addEventListener("change",d.bind(this)),d.call(this,{target:{value:e}}),r){const n=n=>{n.preventDefault();const e=n=>{const e=s.getBoundingClientRect(),t=(n.clientY||n.touches[0].clientY)-e.top,r=Math.max(o[0]-30*e.height,3.5*Math.min(o[1],o[1]-t/e.height*o[1]));i.value=r,u(r),i.dispatchEvent(new Event("change"))},t=()=>{document.removeEventListener("mousemove",e),document.removeEventListener("mouseup",t),document.removeEventListener("touchmove",e),document.removeEventListener("touchend",t),u(0)};document.addEventListener("mousemove",e),document.addEventListener("mouseup",t),document.addEventListener("touchmove",e),document.addEventListener("touchend",t)};r.addEventListener("mousedown",n),r.addEventListener("touchstart",n)}function u(n){a.style.top=-n+"px"}}))}),'<div class="dial-container shadow"> <div class="dial"> <div class="dial__lens"></div> <div class="dial__value">${defaultDialValue}</div> <input type="range" class="dial__input" min="0" max="100" value="0"> </div> </div>',"\n/* Define variables? */\n:host {\n    --theme-color: #8a2e44; /* Define the theme color within the shadow DOM */\n}\n\n.dial input{\n    display: none;\n    /* Hiding the default range input  */\n}\n.dial-container{\n    position: relative;\n    min-height: 100px;\n    background: #baff41;\n    width: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    user-select: none;\n    border-radius: 5px;\n    overflow: hidden;\n}\n\n.dial {\n    position: absolute;\n    display: inline-flex;\n}\n\n\n.dial__value{\n    line-height: 15px;\n}\n.dial__value, .dial__lens{\n    width: 50px;\n    height: 30px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    z-index: 1;\n}\n.dial__value .userVote, .dial__lens{  \n    cursor: grab;\n}\n.dial__lens{\n    background: var(--theme-color); /* Use the theme color */\n    position: absolute;\n}\n\n.dial__value:active {\n    cursor: grabbing; /* Cursor when grabbing */\n}\n\n.dial-container:active {\n    cursor: grabbing; /* Cursor when grabbing */\n}\n\n.dial__label{\n    align-self:flex-end;\n    text-align: center;\n}\n\n.shadow {\n    box-shadow: inset 0 0 16px #61440e;\n}\n\n.userVote{\n    color: white\n}\n")})();