(()=>{"use strict";!async function(e,n){const t=document.createElement("template");t.innerHTML='\n    <style>\n        \n/* Define variables? */\n:host {\n    --theme-color: #8a2e44; /* Define the theme color within the shadow DOM */\n}\n\n.dial input{\n    display: none;\n    /* Hiding the default range input  */\n}\n.dial-container{\n    position: relative;\n    min-height: 100px;\n    background: #baff41;\n    width: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    user-select: none;\n    border-radius: 5px;\n    overflow: hidden;\n}\n\n.dial {\n    position: absolute;\n    display: inline-flex;\n}\n\n\n.dial__value{\n    line-height: 15px;\n}\n.dial__value, .dial__lens{\n    width: 50px;\n    height: 30px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    z-index: 1;\n}\n.dial__value .userVote, .dial__lens{  \n    cursor: grab;\n}\n.dial__lens{\n    background: var(--theme-color); /* Use the theme color */\n    position: absolute;\n}\n\n.dial__value:active {\n    cursor: grabbing; /* Cursor when grabbing */\n}\n\n.dial-container:active {\n    cursor: grabbing; /* Cursor when grabbing */\n}\n\n.dial__label{\n    align-self:flex-end;\n    text-align: center;\n}\n\n.shadow {\n    box-shadow: inset 0 0 16px #61440e;\n}\n\n.userVote{\n    color: white\n}\n\n    </style>\n    <div class="dial-container shadow"> <div class="dial"> <div class="dial__lens"></div> <div class="dial__value">${defaultDialValue}</div> <input type="range" class="dial__input" min="0" max="100" value="0"> </div> </div>\n    ';class i extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(t.content.cloneNode(!0))}connectedCallback(){n.bind(this)()}}customElements.define("os-dial",i)}(0,(function(){document.addEventListener("DOMContentLoaded",(e=>{const n=this.getAttribute("defaultDialValue")||5,t=this.data?.onChange||null,i=this.hasAttribute("range")?this.getAttribute("range").split(","):[0,10],a=this.shadowRoot.querySelector(".dial__input"),o=this.shadowRoot.querySelector(".dial__value"),s=this.shadowRoot.querySelector(".dial__lens"),l=this.shadowRoot.querySelector(".dial-container");function d(e){return e<i[0]||e>i[1]?'<div style="opacity: 0; user-select:none">n/a</div>':`<div>${e}</div>`}function r(e){const n=+e.target.value;this.shadowRoot.querySelector(".dial__value").innerHTML=`${d(n+1)}<br><div class="userVote">${d(n)}</div><br>${d(n-1)}`,t&&t(e)}if(a.setAttribute("min",i[0]),a.setAttribute("max",i[1]),a.addEventListener("change",r.bind(this)),r.call(this,{target:{value:n}}),o){const e=e=>{e.preventDefault();const n=e=>{const n=l.getBoundingClientRect(),t=(e.clientY||e.touches[0].clientY)-n.top,o=Math.max(i[0]-30*n.height,3.5*Math.min(i[1],i[1]-t/n.height*i[1]));a.value=o,c(o),a.dispatchEvent(new Event("change"))},t=()=>{document.removeEventListener("mousemove",n),document.removeEventListener("mouseup",t),document.removeEventListener("touchmove",n),document.removeEventListener("touchend",t),c(0)};document.addEventListener("mousemove",n),document.addEventListener("mouseup",t),document.addEventListener("touchmove",n),document.addEventListener("touchend",t)};o.addEventListener("mousedown",e),o.addEventListener("touchstart",e)}function c(e){s.style.top=-e+"px"}}))}))})();